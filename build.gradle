buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	// querydsl
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	google()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

	// 1. apache
	implementation group: 'org.apache.commons', name: 'commons-lang3'

	// 2. 문자서비스
	implementation 'net.nurigo:sdk:4.2.7'

	// 3. thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.graphql:spring-graphql-test'

	// 4. swagger
	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.0'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'

	//5. querydsl(Spring boot 3.x이상)
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}


tasks.named('test') {
	useJUnitPlatform()
}

// querydsl 세팅 시작
//def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = "${buildDir}/generated/querydsl" // querydslDir 변수 대신 직접 경로를 입력
}
//sourceSets {
//	main.java.srcDir = "${buildDir}/generated/querydsl"
//}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
//	options.compilerArgs = [
//			"-Xlint:all",
//			"-parameters"
//	]
//	options.generatedSourcesDirectory = file("${project.buildDir}/generated-src/querydsl")
}


/**
 * comileQuerydsl.doFirst 추가
 */
//compileQuerydsl.doFirst {
//	if(file(querydslDir).exists() )
//	delete(file(querydslDir))
//}
// querydsl 세팅 끝
